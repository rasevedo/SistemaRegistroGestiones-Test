'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace Integra
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WebIntegraSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WebIntegra
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ObtieneDatosFuncionarioXCedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtieneDomicilioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtieneDatosFuncionarioXNombreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidarCedulaUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerDatosFuncionarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaEstadoFuncionarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EjecutaConsultaFuncionariosActivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaAccionesXFuncionarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaP21XFuncionarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDetalleP21OperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDetalleP21LeccionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDetalleP21ComponentesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDetalleP21EstadoPresenteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDetalleP21LeccEstadoPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDetalleP21CompEstadoPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCatalogoDireccionesRegionalesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDependenciasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCatalogoCentrosEducativosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCatalogoClaseDePuestosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCatalogoEspecialidadesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDependenciaxCodigoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaSuprograma00OperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidaDependenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaDependenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarEscalaSalarialRigeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaNombramientosXFuncionarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaNombramientosXInstitucionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaINSTITUCIONESXFUNCIONARIOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IDP_ConsultaCiruitosXRegionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IDP_ConsultaDependenciaXRegionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IDP_ConsultaFuncionariosXDependenciaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarInfoFuncionarioViaticosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaOcupacionPlazaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPlazaVacanteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaLeccionesInstitucionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaProduccionNombramientosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ProyectoWeb.My.MySettings.Default.ProyectoWeb_cr_go_mep_intranet_aplicaciones_WebIntegra
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ObtieneDatosFuncionarioXCedCompleted As ObtieneDatosFuncionarioXCedCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtieneDomicilioCompleted As ObtieneDomicilioCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtieneDatosFuncionarioXNombreCompleted As ObtieneDatosFuncionarioXNombreCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidarCedulaUsuarioCompleted As ValidarCedulaUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerDatosFuncionarioCompleted As ObtenerDatosFuncionarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaEstadoFuncionarioCompleted As ConsultaEstadoFuncionarioCompletedEventHandler
        
        '''<remarks/>
        Public Event EjecutaConsultaFuncionariosActivosCompleted As EjecutaConsultaFuncionariosActivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaAccionesXFuncionarioCompleted As ConsultaAccionesXFuncionarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaP21XFuncionarioCompleted As ConsultaP21XFuncionarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDetalleP21Completed As ConsultaDetalleP21CompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDetalleP21LeccionesCompleted As ConsultaDetalleP21LeccionesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDetalleP21ComponentesCompleted As ConsultaDetalleP21ComponentesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDetalleP21EstadoPresenteCompleted As ConsultaDetalleP21EstadoPresenteCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDetalleP21LeccEstadoPCompleted As ConsultaDetalleP21LeccEstadoPCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDetalleP21CompEstadoPCompleted As ConsultaDetalleP21CompEstadoPCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCatalogoDireccionesRegionalesCompleted As ObtenerCatalogoDireccionesRegionalesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDependenciasCompleted As ConsultaDependenciasCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCatalogoCentrosEducativosCompleted As ObtenerCatalogoCentrosEducativosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCatalogoClaseDePuestosCompleted As ObtenerCatalogoClaseDePuestosCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCatalogoEspecialidadesCompleted As ObtenerCatalogoEspecialidadesCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDependenciaxCodigoCompleted As ConsultaDependenciaxCodigoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaSuprograma00Completed As ConsultaSuprograma00CompletedEventHandler
        
        '''<remarks/>
        Public Event ValidaDependenciaCompleted As ValidaDependenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaDependenciaCompleted As ConsultaDependenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarEscalaSalarialRigeCompleted As ConsultarEscalaSalarialRigeCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaNombramientosXFuncionarioCompleted As ConsultaNombramientosXFuncionarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaNombramientosXInstitucionCompleted As ConsultaNombramientosXInstitucionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaINSTITUCIONESXFUNCIONARIOCompleted As ConsultaINSTITUCIONESXFUNCIONARIOCompletedEventHandler
        
        '''<remarks/>
        Public Event IDP_ConsultaCiruitosXRegionCompleted As IDP_ConsultaCiruitosXRegionCompletedEventHandler
        
        '''<remarks/>
        Public Event IDP_ConsultaDependenciaXRegionCompleted As IDP_ConsultaDependenciaXRegionCompletedEventHandler
        
        '''<remarks/>
        Public Event IDP_ConsultaFuncionariosXDependenciaCompleted As IDP_ConsultaFuncionariosXDependenciaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarInfoFuncionarioViaticosCompleted As ConsultarInfoFuncionarioViaticosCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaOcupacionPlazaCompleted As ConsultaOcupacionPlazaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPlazaVacanteCompleted As ConsultarPlazaVacanteCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaLeccionesInstitucionCompleted As ConsultaLeccionesInstitucionCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaProduccionNombramientosCompleted As ConsultaProduccionNombramientosCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtieneDatosFuncionarioXCed", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtieneDatosFuncionarioXCed(ByVal empced As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtieneDatosFuncionarioXCed", New Object() {empced})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtieneDatosFuncionarioXCedAsync(ByVal empced As String)
            Me.ObtieneDatosFuncionarioXCedAsync(empced, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtieneDatosFuncionarioXCedAsync(ByVal empced As String, ByVal userState As Object)
            If (Me.ObtieneDatosFuncionarioXCedOperationCompleted Is Nothing) Then
                Me.ObtieneDatosFuncionarioXCedOperationCompleted = AddressOf Me.OnObtieneDatosFuncionarioXCedOperationCompleted
            End If
            Me.InvokeAsync("ObtieneDatosFuncionarioXCed", New Object() {empced}, Me.ObtieneDatosFuncionarioXCedOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtieneDatosFuncionarioXCedOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtieneDatosFuncionarioXCedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtieneDatosFuncionarioXCedCompleted(Me, New ObtieneDatosFuncionarioXCedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtieneDomicilio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtieneDomicilio(ByVal empced As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtieneDomicilio", New Object() {empced})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtieneDomicilioAsync(ByVal empced As String)
            Me.ObtieneDomicilioAsync(empced, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtieneDomicilioAsync(ByVal empced As String, ByVal userState As Object)
            If (Me.ObtieneDomicilioOperationCompleted Is Nothing) Then
                Me.ObtieneDomicilioOperationCompleted = AddressOf Me.OnObtieneDomicilioOperationCompleted
            End If
            Me.InvokeAsync("ObtieneDomicilio", New Object() {empced}, Me.ObtieneDomicilioOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtieneDomicilioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtieneDomicilioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtieneDomicilioCompleted(Me, New ObtieneDomicilioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtieneDatosFuncionarioXNombre", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtieneDatosFuncionarioXNombre(ByVal Primer_Apellido As String, ByVal Segundo_Apellido As String, ByVal Nombre As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtieneDatosFuncionarioXNombre", New Object() {Primer_Apellido, Segundo_Apellido, Nombre})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtieneDatosFuncionarioXNombreAsync(ByVal Primer_Apellido As String, ByVal Segundo_Apellido As String, ByVal Nombre As String)
            Me.ObtieneDatosFuncionarioXNombreAsync(Primer_Apellido, Segundo_Apellido, Nombre, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtieneDatosFuncionarioXNombreAsync(ByVal Primer_Apellido As String, ByVal Segundo_Apellido As String, ByVal Nombre As String, ByVal userState As Object)
            If (Me.ObtieneDatosFuncionarioXNombreOperationCompleted Is Nothing) Then
                Me.ObtieneDatosFuncionarioXNombreOperationCompleted = AddressOf Me.OnObtieneDatosFuncionarioXNombreOperationCompleted
            End If
            Me.InvokeAsync("ObtieneDatosFuncionarioXNombre", New Object() {Primer_Apellido, Segundo_Apellido, Nombre}, Me.ObtieneDatosFuncionarioXNombreOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtieneDatosFuncionarioXNombreOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtieneDatosFuncionarioXNombreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtieneDatosFuncionarioXNombreCompleted(Me, New ObtieneDatosFuncionarioXNombreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarCedulaUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarCedulaUsuario(ByVal Cedula As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ValidarCedulaUsuario", New Object() {Cedula})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidarCedulaUsuarioAsync(ByVal Cedula As String)
            Me.ValidarCedulaUsuarioAsync(Cedula, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidarCedulaUsuarioAsync(ByVal Cedula As String, ByVal userState As Object)
            If (Me.ValidarCedulaUsuarioOperationCompleted Is Nothing) Then
                Me.ValidarCedulaUsuarioOperationCompleted = AddressOf Me.OnValidarCedulaUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ValidarCedulaUsuario", New Object() {Cedula}, Me.ValidarCedulaUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidarCedulaUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidarCedulaUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidarCedulaUsuarioCompleted(Me, New ValidarCedulaUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDatosFuncionario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDatosFuncionario(ByVal Identificacion As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerDatosFuncionario", New Object() {Identificacion})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerDatosFuncionarioAsync(ByVal Identificacion As String)
            Me.ObtenerDatosFuncionarioAsync(Identificacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerDatosFuncionarioAsync(ByVal Identificacion As String, ByVal userState As Object)
            If (Me.ObtenerDatosFuncionarioOperationCompleted Is Nothing) Then
                Me.ObtenerDatosFuncionarioOperationCompleted = AddressOf Me.OnObtenerDatosFuncionarioOperationCompleted
            End If
            Me.InvokeAsync("ObtenerDatosFuncionario", New Object() {Identificacion}, Me.ObtenerDatosFuncionarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerDatosFuncionarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerDatosFuncionarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerDatosFuncionarioCompleted(Me, New ObtenerDatosFuncionarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaEstadoFuncionario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaEstadoFuncionario(ByVal Identificacion As String, ByVal Fecha_dd_mm_yyyy As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaEstadoFuncionario", New Object() {Identificacion, Fecha_dd_mm_yyyy})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaEstadoFuncionarioAsync(ByVal Identificacion As String, ByVal Fecha_dd_mm_yyyy As String)
            Me.ConsultaEstadoFuncionarioAsync(Identificacion, Fecha_dd_mm_yyyy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaEstadoFuncionarioAsync(ByVal Identificacion As String, ByVal Fecha_dd_mm_yyyy As String, ByVal userState As Object)
            If (Me.ConsultaEstadoFuncionarioOperationCompleted Is Nothing) Then
                Me.ConsultaEstadoFuncionarioOperationCompleted = AddressOf Me.OnConsultaEstadoFuncionarioOperationCompleted
            End If
            Me.InvokeAsync("ConsultaEstadoFuncionario", New Object() {Identificacion, Fecha_dd_mm_yyyy}, Me.ConsultaEstadoFuncionarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaEstadoFuncionarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaEstadoFuncionarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaEstadoFuncionarioCompleted(Me, New ConsultaEstadoFuncionarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EjecutaConsultaFuncionariosActivos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EjecutaConsultaFuncionariosActivos(ByVal Consulta As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("EjecutaConsultaFuncionariosActivos", New Object() {Consulta})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EjecutaConsultaFuncionariosActivosAsync(ByVal Consulta As String)
            Me.EjecutaConsultaFuncionariosActivosAsync(Consulta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EjecutaConsultaFuncionariosActivosAsync(ByVal Consulta As String, ByVal userState As Object)
            If (Me.EjecutaConsultaFuncionariosActivosOperationCompleted Is Nothing) Then
                Me.EjecutaConsultaFuncionariosActivosOperationCompleted = AddressOf Me.OnEjecutaConsultaFuncionariosActivosOperationCompleted
            End If
            Me.InvokeAsync("EjecutaConsultaFuncionariosActivos", New Object() {Consulta}, Me.EjecutaConsultaFuncionariosActivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnEjecutaConsultaFuncionariosActivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.EjecutaConsultaFuncionariosActivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EjecutaConsultaFuncionariosActivosCompleted(Me, New EjecutaConsultaFuncionariosActivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaAccionesXFuncionario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaAccionesXFuncionario(ByVal Identificacion As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaAccionesXFuncionario", New Object() {Identificacion})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaAccionesXFuncionarioAsync(ByVal Identificacion As String)
            Me.ConsultaAccionesXFuncionarioAsync(Identificacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaAccionesXFuncionarioAsync(ByVal Identificacion As String, ByVal userState As Object)
            If (Me.ConsultaAccionesXFuncionarioOperationCompleted Is Nothing) Then
                Me.ConsultaAccionesXFuncionarioOperationCompleted = AddressOf Me.OnConsultaAccionesXFuncionarioOperationCompleted
            End If
            Me.InvokeAsync("ConsultaAccionesXFuncionario", New Object() {Identificacion}, Me.ConsultaAccionesXFuncionarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaAccionesXFuncionarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaAccionesXFuncionarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaAccionesXFuncionarioCompleted(Me, New ConsultaAccionesXFuncionarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaP21XFuncionario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaP21XFuncionario(ByVal Cedula As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaP21XFuncionario", New Object() {Cedula})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaP21XFuncionarioAsync(ByVal Cedula As String)
            Me.ConsultaP21XFuncionarioAsync(Cedula, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaP21XFuncionarioAsync(ByVal Cedula As String, ByVal userState As Object)
            If (Me.ConsultaP21XFuncionarioOperationCompleted Is Nothing) Then
                Me.ConsultaP21XFuncionarioOperationCompleted = AddressOf Me.OnConsultaP21XFuncionarioOperationCompleted
            End If
            Me.InvokeAsync("ConsultaP21XFuncionario", New Object() {Cedula}, Me.ConsultaP21XFuncionarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaP21XFuncionarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaP21XFuncionarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaP21XFuncionarioCompleted(Me, New ConsultaP21XFuncionarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDetalleP21", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDetalleP21(ByVal Id_Gestion As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaDetalleP21", New Object() {Id_Gestion})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21Async(ByVal Id_Gestion As String)
            Me.ConsultaDetalleP21Async(Id_Gestion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21Async(ByVal Id_Gestion As String, ByVal userState As Object)
            If (Me.ConsultaDetalleP21OperationCompleted Is Nothing) Then
                Me.ConsultaDetalleP21OperationCompleted = AddressOf Me.OnConsultaDetalleP21OperationCompleted
            End If
            Me.InvokeAsync("ConsultaDetalleP21", New Object() {Id_Gestion}, Me.ConsultaDetalleP21OperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDetalleP21OperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDetalleP21CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDetalleP21Completed(Me, New ConsultaDetalleP21CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDetalleP21Lecciones", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDetalleP21Lecciones(ByVal Id_Gestion As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaDetalleP21Lecciones", New Object() {Id_Gestion})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21LeccionesAsync(ByVal Id_Gestion As String)
            Me.ConsultaDetalleP21LeccionesAsync(Id_Gestion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21LeccionesAsync(ByVal Id_Gestion As String, ByVal userState As Object)
            If (Me.ConsultaDetalleP21LeccionesOperationCompleted Is Nothing) Then
                Me.ConsultaDetalleP21LeccionesOperationCompleted = AddressOf Me.OnConsultaDetalleP21LeccionesOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDetalleP21Lecciones", New Object() {Id_Gestion}, Me.ConsultaDetalleP21LeccionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDetalleP21LeccionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDetalleP21LeccionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDetalleP21LeccionesCompleted(Me, New ConsultaDetalleP21LeccionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDetalleP21Componentes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDetalleP21Componentes(ByVal Id_Gestion As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaDetalleP21Componentes", New Object() {Id_Gestion})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21ComponentesAsync(ByVal Id_Gestion As String)
            Me.ConsultaDetalleP21ComponentesAsync(Id_Gestion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21ComponentesAsync(ByVal Id_Gestion As String, ByVal userState As Object)
            If (Me.ConsultaDetalleP21ComponentesOperationCompleted Is Nothing) Then
                Me.ConsultaDetalleP21ComponentesOperationCompleted = AddressOf Me.OnConsultaDetalleP21ComponentesOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDetalleP21Componentes", New Object() {Id_Gestion}, Me.ConsultaDetalleP21ComponentesOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDetalleP21ComponentesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDetalleP21ComponentesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDetalleP21ComponentesCompleted(Me, New ConsultaDetalleP21ComponentesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDetalleP21EstadoPresente", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDetalleP21EstadoPresente(ByVal Id_Gestion As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaDetalleP21EstadoPresente", New Object() {Id_Gestion})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21EstadoPresenteAsync(ByVal Id_Gestion As String)
            Me.ConsultaDetalleP21EstadoPresenteAsync(Id_Gestion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21EstadoPresenteAsync(ByVal Id_Gestion As String, ByVal userState As Object)
            If (Me.ConsultaDetalleP21EstadoPresenteOperationCompleted Is Nothing) Then
                Me.ConsultaDetalleP21EstadoPresenteOperationCompleted = AddressOf Me.OnConsultaDetalleP21EstadoPresenteOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDetalleP21EstadoPresente", New Object() {Id_Gestion}, Me.ConsultaDetalleP21EstadoPresenteOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDetalleP21EstadoPresenteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDetalleP21EstadoPresenteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDetalleP21EstadoPresenteCompleted(Me, New ConsultaDetalleP21EstadoPresenteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDetalleP21LeccEstadoP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDetalleP21LeccEstadoP(ByVal Id_Gestion As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaDetalleP21LeccEstadoP", New Object() {Id_Gestion})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21LeccEstadoPAsync(ByVal Id_Gestion As String)
            Me.ConsultaDetalleP21LeccEstadoPAsync(Id_Gestion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21LeccEstadoPAsync(ByVal Id_Gestion As String, ByVal userState As Object)
            If (Me.ConsultaDetalleP21LeccEstadoPOperationCompleted Is Nothing) Then
                Me.ConsultaDetalleP21LeccEstadoPOperationCompleted = AddressOf Me.OnConsultaDetalleP21LeccEstadoPOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDetalleP21LeccEstadoP", New Object() {Id_Gestion}, Me.ConsultaDetalleP21LeccEstadoPOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDetalleP21LeccEstadoPOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDetalleP21LeccEstadoPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDetalleP21LeccEstadoPCompleted(Me, New ConsultaDetalleP21LeccEstadoPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDetalleP21CompEstadoP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDetalleP21CompEstadoP(ByVal Id_Gestion As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaDetalleP21CompEstadoP", New Object() {Id_Gestion})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21CompEstadoPAsync(ByVal Id_Gestion As String)
            Me.ConsultaDetalleP21CompEstadoPAsync(Id_Gestion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDetalleP21CompEstadoPAsync(ByVal Id_Gestion As String, ByVal userState As Object)
            If (Me.ConsultaDetalleP21CompEstadoPOperationCompleted Is Nothing) Then
                Me.ConsultaDetalleP21CompEstadoPOperationCompleted = AddressOf Me.OnConsultaDetalleP21CompEstadoPOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDetalleP21CompEstadoP", New Object() {Id_Gestion}, Me.ConsultaDetalleP21CompEstadoPOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDetalleP21CompEstadoPOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDetalleP21CompEstadoPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDetalleP21CompEstadoPCompleted(Me, New ConsultaDetalleP21CompEstadoPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerCatalogoDireccionesRegionales", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCatalogoDireccionesRegionales() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerCatalogoDireccionesRegionales", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoDireccionesRegionalesAsync()
            Me.ObtenerCatalogoDireccionesRegionalesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoDireccionesRegionalesAsync(ByVal userState As Object)
            If (Me.ObtenerCatalogoDireccionesRegionalesOperationCompleted Is Nothing) Then
                Me.ObtenerCatalogoDireccionesRegionalesOperationCompleted = AddressOf Me.OnObtenerCatalogoDireccionesRegionalesOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCatalogoDireccionesRegionales", New Object(-1) {}, Me.ObtenerCatalogoDireccionesRegionalesOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCatalogoDireccionesRegionalesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCatalogoDireccionesRegionalesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCatalogoDireccionesRegionalesCompleted(Me, New ObtenerCatalogoDireccionesRegionalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDependencias", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDependencias() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaDependencias", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDependenciasAsync()
            Me.ConsultaDependenciasAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDependenciasAsync(ByVal userState As Object)
            If (Me.ConsultaDependenciasOperationCompleted Is Nothing) Then
                Me.ConsultaDependenciasOperationCompleted = AddressOf Me.OnConsultaDependenciasOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDependencias", New Object(-1) {}, Me.ConsultaDependenciasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDependenciasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDependenciasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDependenciasCompleted(Me, New ConsultaDependenciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerCatalogoCentrosEducativos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCatalogoCentrosEducativos() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerCatalogoCentrosEducativos", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoCentrosEducativosAsync()
            Me.ObtenerCatalogoCentrosEducativosAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoCentrosEducativosAsync(ByVal userState As Object)
            If (Me.ObtenerCatalogoCentrosEducativosOperationCompleted Is Nothing) Then
                Me.ObtenerCatalogoCentrosEducativosOperationCompleted = AddressOf Me.OnObtenerCatalogoCentrosEducativosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCatalogoCentrosEducativos", New Object(-1) {}, Me.ObtenerCatalogoCentrosEducativosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCatalogoCentrosEducativosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCatalogoCentrosEducativosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCatalogoCentrosEducativosCompleted(Me, New ObtenerCatalogoCentrosEducativosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerCatalogoClaseDePuestos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCatalogoClaseDePuestos() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerCatalogoClaseDePuestos", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoClaseDePuestosAsync()
            Me.ObtenerCatalogoClaseDePuestosAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoClaseDePuestosAsync(ByVal userState As Object)
            If (Me.ObtenerCatalogoClaseDePuestosOperationCompleted Is Nothing) Then
                Me.ObtenerCatalogoClaseDePuestosOperationCompleted = AddressOf Me.OnObtenerCatalogoClaseDePuestosOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCatalogoClaseDePuestos", New Object(-1) {}, Me.ObtenerCatalogoClaseDePuestosOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCatalogoClaseDePuestosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCatalogoClaseDePuestosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCatalogoClaseDePuestosCompleted(Me, New ObtenerCatalogoClaseDePuestosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerCatalogoEspecialidades", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCatalogoEspecialidades() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerCatalogoEspecialidades", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoEspecialidadesAsync()
            Me.ObtenerCatalogoEspecialidadesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCatalogoEspecialidadesAsync(ByVal userState As Object)
            If (Me.ObtenerCatalogoEspecialidadesOperationCompleted Is Nothing) Then
                Me.ObtenerCatalogoEspecialidadesOperationCompleted = AddressOf Me.OnObtenerCatalogoEspecialidadesOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCatalogoEspecialidades", New Object(-1) {}, Me.ObtenerCatalogoEspecialidadesOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCatalogoEspecialidadesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCatalogoEspecialidadesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCatalogoEspecialidadesCompleted(Me, New ObtenerCatalogoEspecialidadesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDependenciaxCodigo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDependenciaxCodigo(ByVal codigo As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaDependenciaxCodigo", New Object() {codigo})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDependenciaxCodigoAsync(ByVal codigo As String)
            Me.ConsultaDependenciaxCodigoAsync(codigo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDependenciaxCodigoAsync(ByVal codigo As String, ByVal userState As Object)
            If (Me.ConsultaDependenciaxCodigoOperationCompleted Is Nothing) Then
                Me.ConsultaDependenciaxCodigoOperationCompleted = AddressOf Me.OnConsultaDependenciaxCodigoOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDependenciaxCodigo", New Object() {codigo}, Me.ConsultaDependenciaxCodigoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDependenciaxCodigoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDependenciaxCodigoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDependenciaxCodigoCompleted(Me, New ConsultaDependenciaxCodigoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaSuprograma00", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaSuprograma00() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaSuprograma00", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaSuprograma00Async()
            Me.ConsultaSuprograma00Async(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaSuprograma00Async(ByVal userState As Object)
            If (Me.ConsultaSuprograma00OperationCompleted Is Nothing) Then
                Me.ConsultaSuprograma00OperationCompleted = AddressOf Me.OnConsultaSuprograma00OperationCompleted
            End If
            Me.InvokeAsync("ConsultaSuprograma00", New Object(-1) {}, Me.ConsultaSuprograma00OperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaSuprograma00OperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaSuprograma00CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaSuprograma00Completed(Me, New ConsultaSuprograma00CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidaDependencia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidaDependencia(ByVal CPresupuestario As String) As Integer
            Dim results() As Object = Me.Invoke("ValidaDependencia", New Object() {CPresupuestario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidaDependenciaAsync(ByVal CPresupuestario As String)
            Me.ValidaDependenciaAsync(CPresupuestario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidaDependenciaAsync(ByVal CPresupuestario As String, ByVal userState As Object)
            If (Me.ValidaDependenciaOperationCompleted Is Nothing) Then
                Me.ValidaDependenciaOperationCompleted = AddressOf Me.OnValidaDependenciaOperationCompleted
            End If
            Me.InvokeAsync("ValidaDependencia", New Object() {CPresupuestario}, Me.ValidaDependenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidaDependenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidaDependenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidaDependenciaCompleted(Me, New ValidaDependenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaDependencia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaDependencia(ByVal codigo As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaDependencia", New Object() {codigo})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaDependenciaAsync(ByVal codigo As String)
            Me.ConsultaDependenciaAsync(codigo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaDependenciaAsync(ByVal codigo As String, ByVal userState As Object)
            If (Me.ConsultaDependenciaOperationCompleted Is Nothing) Then
                Me.ConsultaDependenciaOperationCompleted = AddressOf Me.OnConsultaDependenciaOperationCompleted
            End If
            Me.InvokeAsync("ConsultaDependencia", New Object() {codigo}, Me.ConsultaDependenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaDependenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaDependenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaDependenciaCompleted(Me, New ConsultaDependenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarEscalaSalarialRige", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarEscalaSalarialRige(ByVal Año As String, ByVal Mes As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultarEscalaSalarialRige", New Object() {Año, Mes})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarEscalaSalarialRigeAsync(ByVal Año As String, ByVal Mes As String)
            Me.ConsultarEscalaSalarialRigeAsync(Año, Mes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarEscalaSalarialRigeAsync(ByVal Año As String, ByVal Mes As String, ByVal userState As Object)
            If (Me.ConsultarEscalaSalarialRigeOperationCompleted Is Nothing) Then
                Me.ConsultarEscalaSalarialRigeOperationCompleted = AddressOf Me.OnConsultarEscalaSalarialRigeOperationCompleted
            End If
            Me.InvokeAsync("ConsultarEscalaSalarialRige", New Object() {Año, Mes}, Me.ConsultarEscalaSalarialRigeOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarEscalaSalarialRigeOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarEscalaSalarialRigeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarEscalaSalarialRigeCompleted(Me, New ConsultarEscalaSalarialRigeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaNombramientosXFuncionario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaNombramientosXFuncionario(ByVal Cedula As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaNombramientosXFuncionario", New Object() {Cedula})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaNombramientosXFuncionarioAsync(ByVal Cedula As String)
            Me.ConsultaNombramientosXFuncionarioAsync(Cedula, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaNombramientosXFuncionarioAsync(ByVal Cedula As String, ByVal userState As Object)
            If (Me.ConsultaNombramientosXFuncionarioOperationCompleted Is Nothing) Then
                Me.ConsultaNombramientosXFuncionarioOperationCompleted = AddressOf Me.OnConsultaNombramientosXFuncionarioOperationCompleted
            End If
            Me.InvokeAsync("ConsultaNombramientosXFuncionario", New Object() {Cedula}, Me.ConsultaNombramientosXFuncionarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaNombramientosXFuncionarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaNombramientosXFuncionarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaNombramientosXFuncionarioCompleted(Me, New ConsultaNombramientosXFuncionarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaNombramientosXInstitucion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaNombramientosXInstitucion(ByVal CodPresupuestario As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaNombramientosXInstitucion", New Object() {CodPresupuestario})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaNombramientosXInstitucionAsync(ByVal CodPresupuestario As String)
            Me.ConsultaNombramientosXInstitucionAsync(CodPresupuestario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaNombramientosXInstitucionAsync(ByVal CodPresupuestario As String, ByVal userState As Object)
            If (Me.ConsultaNombramientosXInstitucionOperationCompleted Is Nothing) Then
                Me.ConsultaNombramientosXInstitucionOperationCompleted = AddressOf Me.OnConsultaNombramientosXInstitucionOperationCompleted
            End If
            Me.InvokeAsync("ConsultaNombramientosXInstitucion", New Object() {CodPresupuestario}, Me.ConsultaNombramientosXInstitucionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaNombramientosXInstitucionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaNombramientosXInstitucionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaNombramientosXInstitucionCompleted(Me, New ConsultaNombramientosXInstitucionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaINSTITUCIONESXFUNCIONARIO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaINSTITUCIONESXFUNCIONARIO(ByVal Identificacion As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaINSTITUCIONESXFUNCIONARIO", New Object() {Identificacion})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaINSTITUCIONESXFUNCIONARIOAsync(ByVal Identificacion As String)
            Me.ConsultaINSTITUCIONESXFUNCIONARIOAsync(Identificacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaINSTITUCIONESXFUNCIONARIOAsync(ByVal Identificacion As String, ByVal userState As Object)
            If (Me.ConsultaINSTITUCIONESXFUNCIONARIOOperationCompleted Is Nothing) Then
                Me.ConsultaINSTITUCIONESXFUNCIONARIOOperationCompleted = AddressOf Me.OnConsultaINSTITUCIONESXFUNCIONARIOOperationCompleted
            End If
            Me.InvokeAsync("ConsultaINSTITUCIONESXFUNCIONARIO", New Object() {Identificacion}, Me.ConsultaINSTITUCIONESXFUNCIONARIOOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaINSTITUCIONESXFUNCIONARIOOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaINSTITUCIONESXFUNCIONARIOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaINSTITUCIONESXFUNCIONARIOCompleted(Me, New ConsultaINSTITUCIONESXFUNCIONARIOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDP_ConsultaCiruitosXRegion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IDP_ConsultaCiruitosXRegion(ByVal Region As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("IDP_ConsultaCiruitosXRegion", New Object() {Region})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IDP_ConsultaCiruitosXRegionAsync(ByVal Region As String)
            Me.IDP_ConsultaCiruitosXRegionAsync(Region, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IDP_ConsultaCiruitosXRegionAsync(ByVal Region As String, ByVal userState As Object)
            If (Me.IDP_ConsultaCiruitosXRegionOperationCompleted Is Nothing) Then
                Me.IDP_ConsultaCiruitosXRegionOperationCompleted = AddressOf Me.OnIDP_ConsultaCiruitosXRegionOperationCompleted
            End If
            Me.InvokeAsync("IDP_ConsultaCiruitosXRegion", New Object() {Region}, Me.IDP_ConsultaCiruitosXRegionOperationCompleted, userState)
        End Sub
        
        Private Sub OnIDP_ConsultaCiruitosXRegionOperationCompleted(ByVal arg As Object)
            If (Not (Me.IDP_ConsultaCiruitosXRegionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IDP_ConsultaCiruitosXRegionCompleted(Me, New IDP_ConsultaCiruitosXRegionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDP_ConsultaDependenciaXRegion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IDP_ConsultaDependenciaXRegion(ByVal Region As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("IDP_ConsultaDependenciaXRegion", New Object() {Region})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IDP_ConsultaDependenciaXRegionAsync(ByVal Region As String)
            Me.IDP_ConsultaDependenciaXRegionAsync(Region, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IDP_ConsultaDependenciaXRegionAsync(ByVal Region As String, ByVal userState As Object)
            If (Me.IDP_ConsultaDependenciaXRegionOperationCompleted Is Nothing) Then
                Me.IDP_ConsultaDependenciaXRegionOperationCompleted = AddressOf Me.OnIDP_ConsultaDependenciaXRegionOperationCompleted
            End If
            Me.InvokeAsync("IDP_ConsultaDependenciaXRegion", New Object() {Region}, Me.IDP_ConsultaDependenciaXRegionOperationCompleted, userState)
        End Sub
        
        Private Sub OnIDP_ConsultaDependenciaXRegionOperationCompleted(ByVal arg As Object)
            If (Not (Me.IDP_ConsultaDependenciaXRegionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IDP_ConsultaDependenciaXRegionCompleted(Me, New IDP_ConsultaDependenciaXRegionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IDP_ConsultaFuncionariosXDependencia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IDP_ConsultaFuncionariosXDependencia(ByVal Dependencia As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("IDP_ConsultaFuncionariosXDependencia", New Object() {Dependencia})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IDP_ConsultaFuncionariosXDependenciaAsync(ByVal Dependencia As String)
            Me.IDP_ConsultaFuncionariosXDependenciaAsync(Dependencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IDP_ConsultaFuncionariosXDependenciaAsync(ByVal Dependencia As String, ByVal userState As Object)
            If (Me.IDP_ConsultaFuncionariosXDependenciaOperationCompleted Is Nothing) Then
                Me.IDP_ConsultaFuncionariosXDependenciaOperationCompleted = AddressOf Me.OnIDP_ConsultaFuncionariosXDependenciaOperationCompleted
            End If
            Me.InvokeAsync("IDP_ConsultaFuncionariosXDependencia", New Object() {Dependencia}, Me.IDP_ConsultaFuncionariosXDependenciaOperationCompleted, userState)
        End Sub
        
        Private Sub OnIDP_ConsultaFuncionariosXDependenciaOperationCompleted(ByVal arg As Object)
            If (Not (Me.IDP_ConsultaFuncionariosXDependenciaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IDP_ConsultaFuncionariosXDependenciaCompleted(Me, New IDP_ConsultaFuncionariosXDependenciaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarInfoFuncionarioViaticos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarInfoFuncionarioViaticos(ByVal empced As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultarInfoFuncionarioViaticos", New Object() {empced})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarInfoFuncionarioViaticosAsync(ByVal empced As String)
            Me.ConsultarInfoFuncionarioViaticosAsync(empced, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarInfoFuncionarioViaticosAsync(ByVal empced As String, ByVal userState As Object)
            If (Me.ConsultarInfoFuncionarioViaticosOperationCompleted Is Nothing) Then
                Me.ConsultarInfoFuncionarioViaticosOperationCompleted = AddressOf Me.OnConsultarInfoFuncionarioViaticosOperationCompleted
            End If
            Me.InvokeAsync("ConsultarInfoFuncionarioViaticos", New Object() {empced}, Me.ConsultarInfoFuncionarioViaticosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarInfoFuncionarioViaticosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarInfoFuncionarioViaticosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarInfoFuncionarioViaticosCompleted(Me, New ConsultarInfoFuncionarioViaticosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaOcupacionPlaza", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaOcupacionPlaza(ByVal plaza As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaOcupacionPlaza", New Object() {plaza})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaOcupacionPlazaAsync(ByVal plaza As String)
            Me.ConsultaOcupacionPlazaAsync(plaza, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaOcupacionPlazaAsync(ByVal plaza As String, ByVal userState As Object)
            If (Me.ConsultaOcupacionPlazaOperationCompleted Is Nothing) Then
                Me.ConsultaOcupacionPlazaOperationCompleted = AddressOf Me.OnConsultaOcupacionPlazaOperationCompleted
            End If
            Me.InvokeAsync("ConsultaOcupacionPlaza", New Object() {plaza}, Me.ConsultaOcupacionPlazaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaOcupacionPlazaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaOcupacionPlazaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaOcupacionPlazaCompleted(Me, New ConsultaOcupacionPlazaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultarPlazaVacante", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPlazaVacante(ByVal Consulta As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultarPlazaVacante", New Object() {Consulta})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPlazaVacanteAsync(ByVal Consulta As String)
            Me.ConsultarPlazaVacanteAsync(Consulta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPlazaVacanteAsync(ByVal Consulta As String, ByVal userState As Object)
            If (Me.ConsultarPlazaVacanteOperationCompleted Is Nothing) Then
                Me.ConsultarPlazaVacanteOperationCompleted = AddressOf Me.OnConsultarPlazaVacanteOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPlazaVacante", New Object() {Consulta}, Me.ConsultarPlazaVacanteOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPlazaVacanteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPlazaVacanteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPlazaVacanteCompleted(Me, New ConsultarPlazaVacanteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaLeccionesInstitucion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaLeccionesInstitucion(ByVal Codigo_Completo As String, ByVal Fecha As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ConsultaLeccionesInstitucion", New Object() {Codigo_Completo, Fecha})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaLeccionesInstitucionAsync(ByVal Codigo_Completo As String, ByVal Fecha As String)
            Me.ConsultaLeccionesInstitucionAsync(Codigo_Completo, Fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaLeccionesInstitucionAsync(ByVal Codigo_Completo As String, ByVal Fecha As String, ByVal userState As Object)
            If (Me.ConsultaLeccionesInstitucionOperationCompleted Is Nothing) Then
                Me.ConsultaLeccionesInstitucionOperationCompleted = AddressOf Me.OnConsultaLeccionesInstitucionOperationCompleted
            End If
            Me.InvokeAsync("ConsultaLeccionesInstitucion", New Object() {Codigo_Completo, Fecha}, Me.ConsultaLeccionesInstitucionOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaLeccionesInstitucionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaLeccionesInstitucionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaLeccionesInstitucionCompleted(Me, New ConsultaLeccionesInstitucionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaProduccionNombramientos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaProduccionNombramientos(ByVal Periodo As Integer) As Double
            Dim results() As Object = Me.Invoke("ConsultaProduccionNombramientos", New Object() {Periodo})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaProduccionNombramientosAsync(ByVal Periodo As Integer)
            Me.ConsultaProduccionNombramientosAsync(Periodo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaProduccionNombramientosAsync(ByVal Periodo As Integer, ByVal userState As Object)
            If (Me.ConsultaProduccionNombramientosOperationCompleted Is Nothing) Then
                Me.ConsultaProduccionNombramientosOperationCompleted = AddressOf Me.OnConsultaProduccionNombramientosOperationCompleted
            End If
            Me.InvokeAsync("ConsultaProduccionNombramientos", New Object() {Periodo}, Me.ConsultaProduccionNombramientosOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaProduccionNombramientosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaProduccionNombramientosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaProduccionNombramientosCompleted(Me, New ConsultaProduccionNombramientosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtieneDatosFuncionarioXCedCompletedEventHandler(ByVal sender As Object, ByVal e As ObtieneDatosFuncionarioXCedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtieneDatosFuncionarioXCedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtieneDomicilioCompletedEventHandler(ByVal sender As Object, ByVal e As ObtieneDomicilioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtieneDomicilioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtieneDatosFuncionarioXNombreCompletedEventHandler(ByVal sender As Object, ByVal e As ObtieneDatosFuncionarioXNombreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtieneDatosFuncionarioXNombreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ValidarCedulaUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ValidarCedulaUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidarCedulaUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerDatosFuncionarioCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerDatosFuncionarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerDatosFuncionarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaEstadoFuncionarioCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaEstadoFuncionarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaEstadoFuncionarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub EjecutaConsultaFuncionariosActivosCompletedEventHandler(ByVal sender As Object, ByVal e As EjecutaConsultaFuncionariosActivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EjecutaConsultaFuncionariosActivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaAccionesXFuncionarioCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaAccionesXFuncionarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaAccionesXFuncionarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaP21XFuncionarioCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaP21XFuncionarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaP21XFuncionarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaDetalleP21CompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDetalleP21CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDetalleP21CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaDetalleP21LeccionesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDetalleP21LeccionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDetalleP21LeccionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaDetalleP21ComponentesCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDetalleP21ComponentesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDetalleP21ComponentesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaDetalleP21EstadoPresenteCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDetalleP21EstadoPresenteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDetalleP21EstadoPresenteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaDetalleP21LeccEstadoPCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDetalleP21LeccEstadoPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDetalleP21LeccEstadoPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaDetalleP21CompEstadoPCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDetalleP21CompEstadoPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDetalleP21CompEstadoPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCatalogoDireccionesRegionalesCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCatalogoDireccionesRegionalesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCatalogoDireccionesRegionalesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaDependenciasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDependenciasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDependenciasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCatalogoCentrosEducativosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCatalogoCentrosEducativosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCatalogoCentrosEducativosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCatalogoClaseDePuestosCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCatalogoClaseDePuestosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCatalogoClaseDePuestosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerCatalogoEspecialidadesCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCatalogoEspecialidadesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCatalogoEspecialidadesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaDependenciaxCodigoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDependenciaxCodigoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDependenciaxCodigoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaSuprograma00CompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaSuprograma00CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaSuprograma00CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ValidaDependenciaCompletedEventHandler(ByVal sender As Object, ByVal e As ValidaDependenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidaDependenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaDependenciaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaDependenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaDependenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarEscalaSalarialRigeCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarEscalaSalarialRigeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarEscalaSalarialRigeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaNombramientosXFuncionarioCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaNombramientosXFuncionarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaNombramientosXFuncionarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaNombramientosXInstitucionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaNombramientosXInstitucionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaNombramientosXInstitucionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaINSTITUCIONESXFUNCIONARIOCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaINSTITUCIONESXFUNCIONARIOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaINSTITUCIONESXFUNCIONARIOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub IDP_ConsultaCiruitosXRegionCompletedEventHandler(ByVal sender As Object, ByVal e As IDP_ConsultaCiruitosXRegionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IDP_ConsultaCiruitosXRegionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub IDP_ConsultaDependenciaXRegionCompletedEventHandler(ByVal sender As Object, ByVal e As IDP_ConsultaDependenciaXRegionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IDP_ConsultaDependenciaXRegionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub IDP_ConsultaFuncionariosXDependenciaCompletedEventHandler(ByVal sender As Object, ByVal e As IDP_ConsultaFuncionariosXDependenciaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IDP_ConsultaFuncionariosXDependenciaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarInfoFuncionarioViaticosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarInfoFuncionarioViaticosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarInfoFuncionarioViaticosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaOcupacionPlazaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaOcupacionPlazaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaOcupacionPlazaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultarPlazaVacanteCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPlazaVacanteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPlazaVacanteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaLeccionesInstitucionCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaLeccionesInstitucionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaLeccionesInstitucionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ConsultaProduccionNombramientosCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaProduccionNombramientosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaProduccionNombramientosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
End Namespace
